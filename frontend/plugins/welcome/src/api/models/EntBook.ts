/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API Playlist Vidoe
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntBookEdges,
    EntBookEdgesFromJSON,
    EntBookEdgesFromJSONTyped,
    EntBookEdgesToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntBook
 */
export interface EntBook {
    /**
     * Barcode holds the value of the "Barcode" field.
     * @type {string}
     * @memberof EntBook
     */
    barcode?: string;
    /**
     * BookName holds the value of the "BookName" field.
     * @type {string}
     * @memberof EntBook
     */
    bookName?: string;
    /**
     * BookPage holds the value of the "BookPage" field.
     * @type {number}
     * @memberof EntBook
     */
    bookPage?: number;
    /**
     * 
     * @type {number}
     * @memberof EntBook
     */
    authorID?: number;
    /**
     * 
     * @type {number}
     * @memberof EntBook
     */
    categoryId?: number;
    /**
     * 
     * @type {EntBookEdges}
     * @memberof EntBook
     */
    edges?: EntBookEdges;
    /**
     * ID of the ent.
     * @type {number}
     * @memberof EntBook
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof EntBook
     */
    statusID?: number;
    /**
     * 
     * @type {number}
     * @memberof EntBook
     */
    userID?: number;
}

export function EntBookFromJSON(json: any): EntBook {
    return EntBookFromJSONTyped(json, false);
}

export function EntBookFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntBook {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'barcode': !exists(json, 'Barcode') ? undefined : json['Barcode'],
        'bookName': !exists(json, 'BookName') ? undefined : json['BookName'],
        'bookPage': !exists(json, 'BookPage') ? undefined : json['BookPage'],
        'authorID': !exists(json, 'author_ID') ? undefined : json['author_ID'],
        'categoryId': !exists(json, 'category_id') ? undefined : json['category_id'],
        'edges': !exists(json, 'edges') ? undefined : EntBookEdgesFromJSON(json['edges']),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'statusID': !exists(json, 'status_ID') ? undefined : json['status_ID'],
        'userID': !exists(json, 'user_ID') ? undefined : json['user_ID'],
    };
}

export function EntBookToJSON(value?: EntBook | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Barcode': value.barcode,
        'BookName': value.bookName,
        'BookPage': value.bookPage,
        'author_ID': value.authorID,
        'category_id': value.categoryId,
        'edges': EntBookEdgesToJSON(value.edges),
        'id': value.id,
        'status_ID': value.statusID,
        'user_ID': value.userID,
    };
}


