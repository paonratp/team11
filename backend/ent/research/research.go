// Code generated by entc, DO NOT EDIT.

package research

import (
	"time"
)

const (
	// Label holds the string label denoting the research type in the database.
	Label = "research"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldDOCNAME holds the string denoting the doc_name field in the database.
	FieldDOCNAME = "doc_name"
	// FieldDATE holds the string denoting the date field in the database.
	FieldDATE = "date"
	// FieldPAGENUMBER holds the string denoting the page_number field in the database.
	FieldPAGENUMBER = "page_number"
	// FieldYEARNUMBER holds the string denoting the year_number field in the database.
	FieldYEARNUMBER = "year_number"

	// EdgeRegister holds the string denoting the register edge name in mutations.
	EdgeRegister = "register"
	// EdgeMyDoc holds the string denoting the mydoc edge name in mutations.
	EdgeMyDoc = "myDoc"
	// EdgeDocType holds the string denoting the doctype edge name in mutations.
	EdgeDocType = "docType"

	// Table holds the table name of the research in the database.
	Table = "researches"
	// RegisterTable is the table the holds the register relation/edge.
	RegisterTable = "researches"
	// RegisterInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	RegisterInverseTable = "users"
	// RegisterColumn is the table column denoting the register relation/edge.
	RegisterColumn = "USER_ID"
	// MyDocTable is the table the holds the myDoc relation/edge.
	MyDocTable = "researches"
	// MyDocInverseTable is the table name for the Author entity.
	// It exists in this package in order to avoid circular dependency with the "author" package.
	MyDocInverseTable = "authors"
	// MyDocColumn is the table column denoting the myDoc relation/edge.
	MyDocColumn = "OWNER_ID"
	// DocTypeTable is the table the holds the docType relation/edge.
	DocTypeTable = "researches"
	// DocTypeInverseTable is the table name for the Researchtype entity.
	// It exists in this package in order to avoid circular dependency with the "researchtype" package.
	DocTypeInverseTable = "researchtypes"
	// DocTypeColumn is the table column denoting the docType relation/edge.
	DocTypeColumn = "TYPE_ID"
)

// Columns holds all SQL columns for research fields.
var Columns = []string{
	FieldID,
	FieldDOCNAME,
	FieldDATE,
	FieldPAGENUMBER,
	FieldYEARNUMBER,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Research type.
var ForeignKeys = []string{
	"OWNER_ID",
	"TYPE_ID",
	"USER_ID",
}

var (
	// DOCNAMEValidator is a validator for the "DOC_NAME" field. It is called by the builders before save.
	DOCNAMEValidator func(string) error
	// DefaultDATE holds the default value on creation for the DATE field.
	DefaultDATE func() time.Time
	// PAGENUMBERValidator is a validator for the "PAGE_NUMBER" field. It is called by the builders before save.
	PAGENUMBERValidator func(int) error
	// YEARNUMBERValidator is a validator for the "YEAR_NUMBER" field. It is called by the builders before save.
	YEARNUMBERValidator func(int) error
)
